#!/usr/bin/env Rscript
lrf=$1
library("dplyr")

datpl <- read.table("low_maf.lgen",header=FALSE)
datseq <- read.table("gatk_low_maf.lgen",header=FALSE)
print("read file finished")
datplfil <- datpl %>% filter(V2 %in% unique(datseq$V2)) %>% droplevels()
datref <- read.table("low_maf_ref.tsv",header=FALSE)
colnames(datplfil) <- c("fam", "anims", "variants", "1al", "2al")
colnames(datref) <- c("variants", "ref")
colnames(datseq) <- c("fam", "anims", "variants", "1al", "2al")
datplfil$ref  <- datref[match(datplfil$variants, datref$variants), 2]

dat_tot <- merge(datplfil, datseq, by.x = c("anims", "variants"), by.y = c("anims", "variants"), all.x = TRUE)
write.table(dat_tot, file = "gatk_merged.tsv", sep = "\t")
print("merging variants finished")

count_all <- data.frame(matrix(nrow = 0, ncol = 18))
colnames(count_all) <-c(paste0("index_", LETTERS[1:12]), "NRS", "NRD", "concor", "anims", "chr", "prog")
anims_list <- as.character(unique(dat_tot$anims))
for (j in 1:length(anims_list)) {
  count_var <- data.frame(matrix(0, nrow = 1 , ncol = 18))
  colnames(count_var) <- c(paste0("index_", LETTERS[1:12]), "NRS", "NRD", "concor", "anims", "chr", "prog")
  count_var["chr"] <- "all"
  count_var["prog"] <- "gatk"
  count_var["anims"] <- anims_list[j]
  dat_sl <- dat_tot[dat_tot$anims==anims_list[j],]
  for (i in 1:nrow(dat_sl)) {
    arr_gen=c(as.character(dat_sl[i,"1al.x"]),as.character(dat_sl[i,"2al.x"]))
        # Check whether it comes from lower density genotyping
    if (arr_gen[1] == "0"){
      next
    }
    c_arr  <-  length(which(arr_gen == as.character(dat_sl[i, "ref"])))
        # Check whether the sequence is not in array
    if (is.na(dat_sl[i, "fam.y"]) | dat_sl[i, "1al.y"]== 0) {
      if (c_arr == 2) {
        count_var[10]  <-  count_var[10] + 1
      }
      else if (c_arr == 1) {
        count_var[11]  <-  count_var[11] + 1
      }
      else if (c_arr == 0) {
        count_var[12]  <-  count_var[12] + 1
      }
    }
    else {
      seq_gen  <-  c(as.character(dat_sl[i,"1al.y"]), as.character(dat_sl[i,"2al.y"]))
          # Number of reference allel
      c_seq  <-  length(which(seq_gen == as.character(dat_sl[i, "ref"])))
          # Check the type of genotype array and seq
      type  <-  paste(c(c_arr, c_seq), collapse="")
      if (type == "22") {
        count_var[1]  <-  count_var[1] + 1
      }
      else if (type == "12") {
        count_var[2]  <-  count_var[2] + 1
      }
      else if (type == "02") {
        count_var[3]  <-  count_var[3] + 1
      }
      else if (type == "21") {
        count_var[4]  <-  count_var[4] + 1
      }
      else if (type == "11") {
        count_var[5]  <-  count_var[5] + 1
      }
      else if (type == "01") {
        count_var[6]  <-  count_var[6] + 1
      }
      else if (type == "20") {
        count_var[7]  <-  count_var[7] + 1
      }
      else if (type == "10") {
        count_var[8]  <-  count_var[8] + 1
      }
      else if (type == "00") {
        count_var[9]  <-  count_var[9] + 1
      }
    }
  }
      # NRS formula
  num1  <-  count_var[5] + count_var[6] + count_var[8] + count_var[9]
  denom1  <-  num1 + count_var[2] + count_var[3] + count_var[11] + count_var[12]
  count_var["NRS"]  <-  round(num1 * 100 / denom1, 4)
      # NRD formula
  num2  <-  count_var[2] + count_var[3] + count_var[4] + count_var[6] + count_var[7] + count_var[8]
  denom2  <-  num2 + count_var[5] + count_var[9]
  count_var["NRD"]  <-  round(num2 * 100 / denom2, 4)
      # Concor formula
  num3  <- count_var[1]+count_var[5]+count_var[9]
  denom3  <- num3 + count_var[2] + count_var[3] + count_var[4] + count_var[6] + count_var[7] + count_var[8]
  count_var["concor"]  <-  round(num3 * 100 / denom3, 4)
  count_all <- rbind(count_all,count_var)
  cat("Calculation for animal",anims_list[j], "is finished \n")
}

write.table(count_all, file = "gatk_lowmaf_concor.tsv, sep = "\t")
